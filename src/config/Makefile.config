# Available from: git clone https://code.ornl.gov/isp/acme_inputdata
ELM_DATA_LOCATION = /Users/uec/codes/elm/kernels/repos/ELM_Kernels/repos/acme_inputdata

# assumes you have a working NETCDF.  This can easily be the version built by
# ATS as a part of an ATS installation.
NETCDF_ROOT                     = /Users/uec/codes/ats/amanzi-tpls/install-0.88

# assumes you have a working fortran and c++ compilers with libraries
FC            = gfortran
FCFLAGS       = -Wall -Wunused -fimplicit-none -free -g3 -fbounds-check -fbacktrace
#FCFLAGS       = -Wall -Wunused -fimplicit-none -free -O3

CC	      = clang++
CPPFLAGS      = -g -Wall -std=c++11
STD_LIB_ROOT  = /usr

# note, the linker should almost always be your fortran compiler, NOT your c compiler
LINKER        = gfortran


# ------------------------------------------------
# Hopefully below shouldn't have to be changed.
# ------------------------------------------------

.PRECIOUS: %.o
.SUFFIXES:
.PHONY: all

.SUFFIXES: .o .F .f .c .C .cc .cxx .F90

.F90.o:
	$(FC) $(FCFLAGS) -c $< -o $@
.F.o:
	$(F77) $(FFLAGS) -c $< -o $@
.f.o:
	$(F77) $(FFLAGS) -c $< -o $@
.cc.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@
.cxx.o:
	$(CXX) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

#%.o : %.F90
#	$(FC) -c $(FCFLAGS) $< -o $@

SHELL         = /bin/sh



ELM_LIB				= libelm.a
ELM_LIBS                        = -lelm
ELM_DIR                         = elm


ELM_UTILS_DIR = cime_utils

LIB_SUFFIX=.a

M4	      =	
RM            = rm -fr
CP            = cp
XARGS	      = 
AR	      = ar

######################################################################
# Rules used in all directories.
######################################################################

ELM_CLEAN=$(RM) *.o *.ii *.int.c *.log *.log.* stamp-* core core.* stats -r ti_files ii_files *.mod *.a



