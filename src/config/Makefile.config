#
# Users should change these
# ------------------------------------------------------------------

#ifndef CONFIG_DONE
#define CONFIG_DONE


# Available from: git clone https://code.ornl.gov/isp/acme_inputdata
ELM_DATA_LOCATION ?= /home/7hp/Downloads/acme_inputdata
#ELM_DATA_LOCATION ?= /Users/uec/codes/elm/kernels/repos/acme_inputdata

# assumes you have a working NETCDF.  This can easily be the version built by
# ATS as a part of an ATS installation.
NETCDF_ROOT ?= /usr/local
#NETCDF_ROOT ?= $(AMANZI_TPLS_DIR)

# assumes you have a working gfortran
FC            ?= gfortran
FC_FLAGS      ?= -fimplicit-none -free -g3 -fbounds-check -fbacktrace
FC_LIB_ROOT ?= /usr/lib/gcc/x86_64-linux-gnu/8
#FC_LIB_ROOT ?= /usr/local/Cellar/gcc/8.2.0/lib/gcc/8

# assumes you have a working c++ compiler
CC	      ?= gcc
#CC            ?= clang

CXX	      ?= g++
#CXX           ?= clang++

MPICC         ?= mpicc
MPICXX	      ?= mpic++

CXXFLAGS      += -Wall -Wshadow

STD_LIB_ROOT  = /usr

# assumes you have a working CUDA
NVCC=nvcc
CUDA_FLAGS= -std=c++11 -c -arch=sm_60
CUDA_LIBS= -lopenblas -lpthread -lcudart -lcublas
CUDA_LIBDIRS=/usr/local/cuda-10.0/lib64
CUDA_INCDIRS=-I/usr/local/cuda-10.0/include

# END of User specified things
#----------------------------------------
NETCDF_FLAGS = -L$(NETCDF_ROOT)/lib -lnetcdf
NETCDFF_FLAGS = -L$(NETCDF_ROOT)/lib -lnetcdff
NETCDF_INC_FLAGS = -I$(NETCDF_ROOT)/include

ELM_FLAGS = -L$(ELM_ROOT) -lelm
ELM_INC_FLAGS = -I$(ELM_ROOT)

GFORTRAN_FLAGS = -L$(FC_LIB_ROOT) -lgfortran

# linking flags
CUDA_LD_FLAGS = -L$(CUDA_LIBDIRS) -lpthread -lcudart -lcublas

#
# rules
#
.PHONY: all
.PRECIOUS: %.cc.o %.F90.o %.cpp.o %.cu.o
.SUFFIXES: .cc.o .F90.o .cpp.o .cu.o .cc .F90 .cpp .cu

%.F90.o: %.F90
	$(FC) $(FC_FLAGS) $(NETCDF_INC_FLAGS) $(ELM_INC_FLAGS) -c $< -o $@ 
%.cpp.o: %.cpp
	$(CXX) $(CXXFLAGS) $(NETCDF_INC_FLAGS) $(ELM_INC_FLAGS) -c $< -o $@
%.cu.o: %.cu
	$(NVCC) $(CUDA_FLAGS) -c $< -o $@

SHELL         = /bin/sh

LIB_SUFFIX=.a

M4	      =	
RM            = rm -fr
CP            = cp
XARGS	      = 
AR	      = ar

######################################################################
# Rules used in all directories.
######################################################################

ELM_CLEAN=$(RM) -f *.o *.ii *.int.c *.log *.log.* stamp-* core core.* stats -r ti_files ii_files *.mod *.a



#endif
